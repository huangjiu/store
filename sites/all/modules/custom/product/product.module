<?php 

include_once drupal_get_path('module' , 'product') . '/product.entity.inc';

/**
 * Implments hook_menu
 */
function product_menu(){
	$items['product'] = array(
		'title' => '产品中心',
		'page callback' => 'product_page',
		'menu-name' => 'main-menu',
		'type' => MENU_SUGGESTED_ITEM,
		'access callback' => TRUE,
	);

	$items['product/term/%'] = array(
    'title' => '系列产品信息',
    'page callback' => 'product_term_page',
    'page arguments'=> array(2) ,
    'menu-name' => 'main-menu',
    'type' => MENU_SUGGESTED_ITEM,
   	'access callback' => TRUE,
  );

  $items['product/%'] = array(
    'title' => '产品信息',
    'page callback' => 'product_info_page',
     'page arguments'=> array(1) ,
    'menu-name' => 'main-menu',
    'type' => MENU_SUGGESTED_ITEM,
   	'access callback' => TRUE,
  );
  return $items;
}

function product_page(){
	$repo = new ProductTermRepository();
	$list = $repo-> get_top_terms();	
	$product_renders = array();
	if( $list ) {
		foreach ($list as $term ) {
			$entity = new Term( $term->tid );
			$children = $repo-> get_children($term->tid);
			$nav_image = $entity-> get_field('field_term_nav_image');

			$terms = array();
			foreach ($children as $prod_term) {
				$pro_entity = new Term( $prod_term->tid );
				$image = $pro_entity-> get_field('field_term_images');
				$pro_term =  $prod_term;
				$pro_term-> images = array(
					'#theme' => 'image' ,
					'#path'  =>  $image['uri'] ,
				);
				$pro_term->url = url('product/term/' . $prod_term-> tid);
				$terms[] = $pro_term;
			}

			$banner = $entity-> get_field('field_term_banner');
			$params = array(
				'terms' => $terms ,
				'top' => $banner['value'],
				'style' => $entity-> get_field('field_term_style') ,
			);

			$params['nav'] = product_get_nav_element( $term->tid );
			$product_renders[] = common_module_template_file('product' , 'front-info' , $params);
		}	
	}
	return $product_renders;
}

function product_get_nav_element($tid , $parent = TRUE){
		$repo = new ProductTermRepository();

		$pid = $tid;
		if( !$parent ) {
			$parents = $repo-> get_parents($tid);
			$parents = array_merge($parents);
			$pid = $parents[0]->tid;
		}

		$entity = new Term( $pid );
		$children = $repo-> get_children($pid);
		$left = $entity-> get_field('field_term_left_image');

		$terms = array();
		foreach ($children as $term) {
			$pro_entity = new Term( $term->tid );
			$pro_term =  $term;
			$pro_term->url = url('product/term/' . $term-> tid);
			$terms[] = $pro_term;
		}

		$params = array(
			'terms' => $terms ,
			'left' => array( 
				'#theme' => 'image' ,
				'#path'  =>  $left['uri'] ,
			) ,
		);
		return common_module_template_file('product' , 'nav' , $params);
}

function product_term_page($tid){
	$entity = new Term( $tid );
	$image = $entity-> get_field('field_term_images');
	$pro_repo = new ProductRepository();
	$entities = $pro_repo->get_entity_by_field( 'field_pro_category' , 'tid' , $tid);
	$product_renders = array();
	if( $entities ) {
		foreach ($entities as $product ) {
			$render = array();
			$pro_image  = $product-> get_field('field_pro_image');
			$render['image'] = array(
				'#theme' => 'image' ,
				'#path'  =>  $pro_image['uri'] ,
			);
			$render['link'] = array(
				'#markup' =>  l($product-> title  , 'product/'. $product->nid) ,
			);
			$render['url'] = url('product/'. $product->nid); 
			$product_renders[] = $render;
		}
	}
	$params = array( 
		'nav' => product_get_nav_element($tid , false) ,
		'image' => array(
			'#theme' => 'image' ,
			'#path'  =>  $image['uri'] ,
		),
		'title' =>  $entity->name ,
		'products' => $product_renders ,
		'breadcrumb' => product_breadcrumb( $tid) ,
	);
	return common_module_template_file('product' , 'list' , $params);
}

function product_info_page($nid){
	$product = new Node($nid);
	$cat = $product-> get_field('field_pro_category');
	$content =$product-> get_field('field_pro_content' , 'value') ; 
	$params = array(
		'nav' => product_get_nav_element( $cat['tid'] , false ) ,
		'content' => $content['safe_value'],
		'breadcrumb' => product_breadcrumb( $cat['tid'] ) ,
	);
	return common_module_template_file('product' , 'detail' , $params);
}

function product_breadcrumb($tid){
	$repo = new ProductTermRepository();
	$parents = $repo-> get_parents($tid);
	$breadcrumb = array();
	$breadcrumb['产品专区'] = "product";
	foreach ($parents as $key => $parent) {
		$breadcrumb[$parent-> name] = "product";
	}
	$term = new Term($tid);
	$breadcrumb[$term-> name] = 'product/term/' . $tid;
	return common_module_template_file('product' , 'breadcrumb' , array('breadcrumb' => $breadcrumb));
}